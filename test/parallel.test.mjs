// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Ava from "../src/ava.mjs";
import * as $$Promise from "../helpers/promise.mjs";

function sleep(duration) {
  return $$Promise.make(function (resolve, reject) {
              setTimeout(resolve, duration);
              
            });
}

var state = {
  contents: 0
};

Ava.testAsync("[async] Parallel 1", (function (t) {
        return $$Promise.$$finally(sleep(10), (function (param) {
                      Ava.is(t, state.contents, 1, "[async] Parallel 2 should have incremented by now", undefined);
                      state.contents = state.contents + 1 | 0;
                      return Ava.is(t, state.contents, 2, "[async] Parallel 1 should increment", undefined);
                    }));
      }));

Ava.testAsync("[async] Parallel 2", (function (t) {
        return $$Promise.$$finally($$Promise.resolve(undefined), (function (param) {
                      Ava.is(t, state.contents, 0, "[async] Parallel 2 should be the first to increment", undefined);
                      state.contents = state.contents + 1 | 0;
                      return Ava.is(t, state.contents, 1, "[async] Parallel 2 should increment", undefined);
                    }));
      }));

Ava.testAsync("[async] Parallel 3", (function (t) {
        return $$Promise.$$finally(sleep(20), (function (param) {
                      Ava.is(t, state.contents, 2, "[async] Parallel 1 and 2 should should have incremented by now", undefined);
                      state.contents = state.contents + 1 | 0;
                      return Ava.is(t, state.contents, 3, "[async] Parallel 3 should increment last", undefined);
                    }));
      }));

export {
  sleep ,
  state ,
  
}
/*  Not a pure module */
