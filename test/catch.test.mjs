// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Ava from "../src/ava.mjs";
import * as $$Promise from "../helpers/promise.mjs";
import * as Caml_exceptions from "../node_modules/rescript/lib/es6/caml_exceptions.js";

var AnError = /* @__PURE__ */Caml_exceptions.create("Catch.AnError");

Ava.testAsync("should catch failures", (function (t) {
        var __x = Promise.reject({
              RE_EXN_ID: AnError,
              _1: "Things not good"
            });
        var __x$1 = __x.then(function (param) {
              Ava.fail(t, "Should not enter 'then' clause", undefined);
              return Promise.resolve(undefined);
            });
        return __x$1.catch(function (param) {
                    return Promise.resolve(Ava.pass(t, "The promise did reject", undefined));
                  });
      }));

Ava.testAsync("should catch failures (again)", (function (t) {
        return $$Promise.tapError($$Promise.tapOk($$Promise.reject({
                            RE_EXN_ID: AnError,
                            _1: "Things not good"
                          }), (function (param) {
                          return Ava.fail(t, "Should not enter 'then' clause", undefined);
                        })), (function (param) {
                      return Ava.pass(t, "The promise did reject", undefined);
                    }));
      }));

Ava.testAsync("should catch failures (one more time)", (function (t) {
        return $$Promise.tap($$Promise.reject({
                        RE_EXN_ID: AnError,
                        _1: "Things not good"
                      }), (function (x) {
                      if (x.TAG === /* Ok */0) {
                        return Ava.fail(t, "Should not be 'Ok(_)'", undefined);
                      } else {
                        return Ava.pass(t, "Is an 'Error(_)'", undefined);
                      }
                    }));
      }));

export {
  AnError ,
  
}
/*  Not a pure module */
